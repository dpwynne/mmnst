% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lambdaJCrossValidation.R
\name{lambda.J.cross.validation}
\alias{lambda.J.cross.validation}
\title{Recursive dyadic partitioning cross-validation}
\usage{
lambda.J.cross.validation(spikes, t.start = 0, t.end,
  poss.lambda = seq(0, 10, by = 0.1), max.J = 7, max.diff = 0.005,
  pct.diff.plot = TRUE)
}
\arguments{
\item{spikes}{a list of spike trains}

\item{t.start}{the starting time of the recording window; the default value is 0}

\item{t.end}{the ending time of the recording window}

\item{poss.lambda}{a numeric vector containing a grid of penalty values}

\item{max.J}{the maximum resolution of the dyadic partitioning used the estimate the piecewise constant intensity function c(t)}

\item{max.diff}{the maximum allowance for the integrated squared error (ISE) of a smaller model to deviate from the overall minimum ISE}

\item{pct.diff.plot}{a logical value indicating whether to produce a plot of the percentage difference (above minimum ISE) vs. J}
}
\value{
a list of length 3
The first item in the list is the optimal partition depth as computed by ISE
The second item in the list is the optimal penalty term as corresponding to that partition depth
The third item in the list is a matrix containing the ISE values for all combinations of partition depth and penalty term
}
\description{
Optimizes a penalized log-likelihood to find the optimal number of partitions for the recursive dyadic partitioning
}
